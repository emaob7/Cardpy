{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport * as WebBrowser from 'expo-web-browser';\nimport * as Google from 'expo-auth-session/providers/google';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as AuthSession from 'expo-auth-session';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nWebBrowser.maybeCompleteAuthSession();\nexport default function Login() {\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    accessToken = _React$useState2[0],\n    setAccessToken = _React$useState2[1];\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    user = _React$useState4[0],\n    setUser = _React$useState4[1];\n  var _Google$useIdTokenAut = Google.useIdTokenAuthRequest({\n      clientId: \"632865725104-52llnsrogj1rh755u7k89epmij1qqjk1.apps.googleusercontent.com\",\n      iosClientId: \"632865725104-9ggp9tusdjh607ipgr3v8ugvmk2qnjna.apps.googleusercontent.com\",\n      androidClientId: \"632865725104-1puusfvjiv54c45mv3gmslkgqvb0i1m2.apps.googleusercontent.com\",\n      scopes: ['profile', 'email'],\n      redirectUri: AuthSession.makeRedirectUri({\n        scheme: 'com.consultas.cedu'\n      })\n    }),\n    _Google$useIdTokenAut2 = _slicedToArray(_Google$useIdTokenAut, 3),\n    request = _Google$useIdTokenAut2[0],\n    response = _Google$useIdTokenAut2[1],\n    promptAsync = _Google$useIdTokenAut2[2];\n  React.useEffect(function () {\n    if ((response == null ? void 0 : response.type) === \"success\") {\n      setAccessToken(response.authentication.accessToken);\n      accessToken && fetchUserInfo();\n    }\n  }, [response, accessToken]);\n  function fetchUserInfo() {\n    return _fetchUserInfo.apply(this, arguments);\n  }\n  function _fetchUserInfo() {\n    _fetchUserInfo = _asyncToGenerator(function* () {\n      var response = yield fetch(\"https://www.googleapis.com/userinfo/v2/me\", {\n        headers: {\n          Authorization: \"Bearer \" + accessToken\n        }\n      });\n      var useInfo = yield response.json();\n      setUser(useInfo);\n    });\n    return _fetchUserInfo.apply(this, arguments);\n  }\n  var ShowUserInfo = function ShowUserInfo() {\n    if (user) {\n      return _jsxs(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 35,\n            fontWeight: 'bold',\n            marginBottom: 20\n          },\n          children: \"Welcome\"\n        }), _jsx(Image, {\n          source: {\n            uri: user.picture\n          },\n          style: {\n            width: 100,\n            height: 100,\n            borderRadius: 50\n          }\n        }), _jsx(Text, {\n          style: {\n            fontSize: 20,\n            fontWeight: 'bold'\n          },\n          children: user.name\n        })]\n      });\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [user && _jsx(ShowUserInfo, {}), user === null && _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 35,\n          fontWeight: 'bold'\n        },\n        children: \"Welcome\"\n      }), _jsx(Text, {\n        style: {\n          fontSize: 25,\n          fontWeight: 'bold',\n          marginBottom: 20,\n          color: 'gray'\n        },\n        children: \"Please login\"\n      }), _jsx(TouchableOpacity, {\n        disabled: !request,\n        onPress: function onPress() {\n          promptAsync({\n            useProxy: false\n          });\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 25,\n            fontWeight: 'bold',\n            marginBottom: 20,\n            color: 'gray'\n          },\n          children: \"Google\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","WebBrowser","Google","StyleSheet","Text","View","Image","TouchableOpacity","AuthSession","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","maybeCompleteAuthSession","Login","_React$useState","useState","_React$useState2","_slicedToArray","accessToken","setAccessToken","_React$useState3","_React$useState4","user","setUser","_Google$useIdTokenAut","useIdTokenAuthRequest","clientId","iosClientId","androidClientId","scopes","redirectUri","makeRedirectUri","scheme","_Google$useIdTokenAut2","request","response","promptAsync","useEffect","type","authentication","fetchUserInfo","_fetchUserInfo","apply","arguments","_asyncToGenerator","fetch","headers","Authorization","useInfo","json","ShowUserInfo","style","flex","alignItems","justifyContent","children","fontSize","fontWeight","marginBottom","source","uri","picture","width","height","borderRadius","name","styles","container","color","disabled","onPress","useProxy","create","backgroundColor"],"sources":["C:/Users/Emmanuel/Desktop/consultas/Login.js"],"sourcesContent":["import * as React from 'react';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport * as Google from 'expo-auth-session/providers/google';\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\r\nimport * as AuthSession from 'expo-auth-session';\r\n\r\nWebBrowser.maybeCompleteAuthSession();\r\n\r\nexport default function Login() {\r\n  const [accessToken, setAccessToken] = React.useState(null);\r\n  const [user, setUser] = React.useState(null);\r\n  const [request, response, promptAsync] = Google.useIdTokenAuthRequest({\r\n    clientId: \"632865725104-52llnsrogj1rh755u7k89epmij1qqjk1.apps.googleusercontent.com\",\r\n    iosClientId: \"632865725104-9ggp9tusdjh607ipgr3v8ugvmk2qnjna.apps.googleusercontent.com\",\r\n    androidClientId: \"632865725104-1puusfvjiv54c45mv3gmslkgqvb0i1m2.apps.googleusercontent.com\",\r\n    scopes: ['profile', 'email'],\r\n    redirectUri: AuthSession.makeRedirectUri({\r\n             scheme: 'com.consultas.cedu'\r\n            }), \r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if(response?.type === \"success\") {\r\n      setAccessToken(response.authentication.accessToken);\r\n      accessToken && fetchUserInfo();\r\n    }\r\n  }, [response, accessToken])\r\n\r\n  async function fetchUserInfo() {\r\n    let response = await fetch(\"https://www.googleapis.com/userinfo/v2/me\", {\r\n      headers: { Authorization: `Bearer ${accessToken}` }\r\n    });\r\n    const useInfo = await response.json();\r\n    setUser(useInfo);\r\n  }\r\n\r\n  const ShowUserInfo = () => {\r\n    if(user) {\r\n      return(\r\n        <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\r\n          <Text style={{fontSize: 35, fontWeight: 'bold', marginBottom: 20}}>Welcome</Text>\r\n          <Image source={{uri: user.picture}} style={{width: 100, height: 100, borderRadius: 50}} />\r\n          <Text style={{fontSize: 20, fontWeight: 'bold'}}>{user.name}</Text>\r\n        </View>\r\n      )\r\n    }\r\n  }  \r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {user && <ShowUserInfo />}\r\n      {user === null &&\r\n          <>\r\n          <Text style={{fontSize: 35, fontWeight: 'bold'}}>Welcome</Text>\r\n          <Text style={{fontSize: 25, fontWeight: 'bold', marginBottom: 20, color: 'gray'}}>Please login</Text>\r\n        <TouchableOpacity\r\n          disabled={!request}\r\n          onPress={() => {\r\n            promptAsync({ useProxy: false });\r\n            }} \r\n        >\r\n          <Text style={{fontSize: 25, fontWeight: 'bold', marginBottom: 20, color: 'gray'}}>Google</Text>\r\n        </TouchableOpacity>\r\n        </>\r\n      }\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
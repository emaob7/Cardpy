{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport firebase from \"./firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction RegisterScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  function registerUser() {\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(function (userCredential) {\n      var user = userCredential.user;\n      console.log('Usuario registrado con éxito', user);\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      console.error('Error al registrar usuario', errorCode, errorMessage);\n    });\n  }\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Registrarse\"\n    }), _jsx(TextInput, {\n      placeholder: \"Correo electr\\xF3nico\",\n      onChangeText: setEmail,\n      value: email,\n      keyboardType: \"email-address\",\n      autoCapitalize: \"none\"\n    }), _jsx(TextInput, {\n      placeholder: \"Contrase\\xF1a\",\n      onChangeText: setPassword,\n      value: password,\n      secureTextEntry: true\n    }), _jsx(Button, {\n      title: \"Registrarse\",\n      onPress: registerUser\n    })]\n  });\n}\nexport default RegisterScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","firebase","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","registerUser","auth","createUserWithEmailAndPassword","then","userCredential","user","console","log","catch","error","errorCode","code","errorMessage","message","children","placeholder","onChangeText","value","keyboardType","autoCapitalize","secureTextEntry","title","onPress"],"sources":["C:/Users/Emmanuel/Desktop/consultas/RegisterScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button } from 'react-native';\r\nimport firebase from './firebase';\r\n\r\nfunction RegisterScreen() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  function registerUser() {\r\n    firebase.auth().createUserWithEmailAndPassword(email, password)\r\n      .then((userCredential) => {\r\n        // El usuario se ha registrado correctamente\r\n        const user = userCredential.user;\r\n        console.log('Usuario registrado con éxito', user);\r\n      })\r\n      .catch((error) => {\r\n        // Hubo un error al registrarse\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        console.error('Error al registrar usuario', errorCode, errorMessage);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <Text>Registrarse</Text>\r\n      <TextInput\r\n        placeholder=\"Correo electrónico\"\r\n        onChangeText={setEmail}\r\n        value={email}\r\n        keyboardType=\"email-address\"\r\n        autoCapitalize=\"none\"\r\n      />\r\n      <TextInput\r\n        placeholder=\"Contraseña\"\r\n        onChangeText={setPassword}\r\n        value={password}\r\n        secureTextEntry={true}\r\n      />\r\n      <Button title=\"Registrarse\" onPress={registerUser} />\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default RegisterScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAExC,OAAOC,QAAQ;AAAmB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElC,SAASC,cAAcA,CAAA,EAAG;EACxB,IAAAC,SAAA,GAA0BX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAgChB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,SAASG,YAAYA,CAAA,EAAG;IACtBf,QAAQ,CAACgB,IAAI,EAAE,CAACC,8BAA8B,CAACR,KAAK,EAAEI,QAAQ,CAAC,CAC5DK,IAAI,CAAC,UAACC,cAAc,EAAK;MAExB,IAAMC,IAAI,GAAGD,cAAc,CAACC,IAAI;MAChCC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,IAAI,CAAC;IACnD,CAAC,CAAC,CACDG,KAAK,CAAC,UAACC,KAAK,EAAK;MAEhB,IAAMC,SAAS,GAAGD,KAAK,CAACE,IAAI;MAC5B,IAAMC,YAAY,GAAGH,KAAK,CAACI,OAAO;MAClCP,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEC,SAAS,EAAEE,YAAY,CAAC;IACtE,CAAC,CAAC;EACN;EAEA,OACEvB,KAAA,CAACR,IAAI;IAAAiC,QAAA,GACH3B,IAAA,CAACL,IAAI;MAAAgC,QAAA,EAAC;IAAW,EAAO,EACxB3B,IAAA,CAACJ,SAAS;MACRgC,WAAW,EAAC,uBAAoB;MAChCC,YAAY,EAAErB,QAAS;MACvBsB,KAAK,EAAEvB,KAAM;MACbwB,YAAY,EAAC,eAAe;MAC5BC,cAAc,EAAC;IAAM,EACrB,EACFhC,IAAA,CAACJ,SAAS;MACRgC,WAAW,EAAC,eAAY;MACxBC,YAAY,EAAEjB,WAAY;MAC1BkB,KAAK,EAAEnB,QAAS;MAChBsB,eAAe,EAAE;IAAK,EACtB,EACFjC,IAAA,CAACH,MAAM;MAACqC,KAAK,EAAC,aAAa;MAACC,OAAO,EAAEtB;IAAa,EAAG;EAAA,EAChD;AAEX;AAEA,eAAeV,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}